{
  "api_contract": [
    {
      "ruta": "/api/hipotecas",
      "metodo": "GET",
      "descripcion": "Obtiene todas las hipotecas con datos de cliente y propiedad.",
      "parametros_entrada": {},
      "respuesta_esperada": [
        {
          "id": "integer",
          "cliente_id": "integer",
          "nombre_cliente": "string",
          "propiedad_id": "integer",
          "direccion_propiedad": "string",
          "monto_principal": "float",
          "tasa_interes_anual": "float",
          "plazo_anos": "integer",
          "fecha_inicio": "date",
          "estado": "string ('Activa', 'Pagada', 'En Mora')"
        }
      ]
    },
    {
      "ruta": "/api/hipotecas",
      "metodo": "POST",
      "descripcion": "Crea una nueva hipoteca.",
      "parametros_entrada": {
        "cliente_id": "integer",
        "propiedad_id": "integer",
        "monto_principal": "float",
        "tasa_interes_anual": "float",
        "plazo_anos": "integer",
        "fecha_inicio": "date"
      },
      "respuesta_esperada": {
        "id": "integer",
        "mensaje": "string"
      }
    },
    {
      "ruta": "/api/hipotecas/<int:id>/amortizacion",
      "metodo": "GET",
      "descripcion": "Devuelve el plan de amortización completo.",
      "parametros_entrada": {},
      "respuesta_esperada": [
        {
          "cuota_mensual": "float",
          "capital_amortizado": "float",
          "interes_pagado": "float",
          "saldo_restante": "float",
          "fecha_pago": "date"
        }
      ]
    },
    {
      "ruta": "/api/hipotecas/<int:id>/pagos",
      "metodo": "POST",
      "descripcion": "Registra un nuevo pago para la hipoteca.",
      "parametros_entrada": {
        "fecha_pago": "date",
        "monto_pagado": "float"
      },
      "respuesta_esperada": {
        "id": "integer",
        "mensaje": "string"
      }
    }
  ],
  "contrato_qa_e2e": {
    "dashboard_table": "hipoteca-table",
    "btn_crear_nueva": "btn-nueva-hipoteca",
    "hipoteca_row": "hipoteca-row",
    "detail_view": "detalle-hipoteca",
    "btn_registrar_pago": "btn-reg-pago",
    "amortizacion_table": "tabla-amortizacion"
  },
  "plan": [
    {
      "etapa": "backend",
      "tareas": [
        "Crear el directorio 'backend' con un archivo '__init__.py' que defina la factory 'create_app'.",
        "Configurar en 'create_app' la extensión Flask-SQLAlchemy y apuntar a 'sqlite:///hipotecas.db'.",
        "Definir los modelos SQLAlchemy para clientes, propiedades, hipotecas y pagos según el esquema de datos.",
        "Crear un Blueprint llamado 'api_bp' en 'backend/routes.py' que contenga los endpoints '/api/hipotecas', '/api/hipotecas/<int:id>/amortizacion' y '/api/hipotecas/<int:id>/pagos'.",
        "Implementar la lógica de creación de hipoteca validando existencia de cliente y propiedad.",
        "Desarrollar el algoritmo para calcular el plan de amortización usando tasa anual, plazo y monto principal.",
        "Registrar pagos en la tabla 'pagos' actualizando el saldo restante de la hipoteca y cambiando su estado a 'Pagada' cuando corresponda.",
        "Crear un archivo 'requirements.txt' con Flask, Flask-SQLAlchemy, pytest y flask-cors.",
        "Añadir un archivo 'pytest.ini' configurado para incluir la ruta del backend.",
        "Generar pruebas unitarias en 'tests/test_backend.py' que cubran los cuatro endpoints principales.",
        "Configurar CORS en el app factory para permitir llamadas desde el dominio del frontend."
      ]
    },
    {
      "etapa": "frontend",
      "tareas": [
        "Crear el archivo 'frontend/index.html' con la estructura básica de una SPA.",
        "Incluir un contenedor con id 'app' y datos-testid 'dashboard_table'.",
        "Implementar JavaScript inline que, al cargar, realice una solicitud GET a '/api/hipotecas' y renderice las hipotecas activas en la tabla.",
        "Añadir un botón con datos-testid 'btn_crear_nueva' para abrir un modal de formulario.",
        "Diseñar el formulario para crear una nueva hipoteca, capturando los campos necesarios y enviándolos vía POST a '/api/hipotecas'.",
        "Cuando se haga clic en una fila (datos-testid 'hipoteca_row'), cambiar la vista a detalle usando datos del endpoint GET '/api/hipotecas/<id>/amortizacion' y mostrar el plan en un elemento con datos-testid 'amortizacion_table'.",
        "Incluir un botón de datos-testid 'btn_registrar_pago' que abra un formulario para registrar pagos.",
        "Gestionar la actualización dinámica del dashboard tras crear hipoteca o registrar pago."
      ]
    },
    {
      "etapa": "e2e",
      "tareas": [
        "Crear el directorio 'cypress/e2e' y dentro un archivo 'mortgage.cy.js'.",
        "Escribir pruebas que visiten la raíz '/', verifiquen la tabla de hipotecas, creen una nueva hipoteca a través del modal, y confirmen su aparición en la lista.",
        "Simular el registro de un pago para una hipoteca existente y validar que el saldo se actualiza correctamente.",
        "Verificar que al seleccionar una hipoteca se muestra la vista de detalle con el plan de amortización obtenido del backend."
      ]
    }
  ]
}